import pytest
from solution import solution


@pytest.mark.parametrize(
    "board, expected",
    [
        (
            [
                ["#", "-", "#", "#", "*"],
                ["#", "-", "-", "#", "#"],
                ["-", "#", "-", "#", "-"],
                ["-", "-", "#", "-", "#"],
                ["#", "*", "-", "-", "-"],
                ["-", "-", "*", "#", "-"],
            ],
            [
                ["-", "-", "-", "-", "*"],
                ["-", "-", "-", "-", "-"],
                ["-", "-", "-", "-", "-"],
                ["-", "-", "-", "-", "-"],
                ["-", "*", "-", "-", "#"],
                ["#", "-", "*", "-", "#"],
            ],
        ),
        (
            [
                ["#", "#", "*"],
                ["#", "-", "*"],
                ["#", "-", "*"],
                ["-", "#", "#"],
                ["*", "-", "#"],
                ["*", "-", "-"],
                ["*", "-", "-"],
            ],
            [
                ["-", "-", "*"],
                ["-", "-", "*"],
                ["-", "-", "*"],
                ["-", "-", "-"],
                ["*", "-", "-"],
                ["*", "-", "#"],
                ["*", "-", "#"],
            ],
        ),
        (
            [
                ["#", "#", "#", "#"],
                ["-", "#", "-", "#"],
                ["#", "#", "#", "#"],
                ["-", "-", "-", "-"],
                ["*", "*", "*", "*"],
                ["-", "-", "-", "-"],
            ],
            [
                ["-", "-", "-", "-"],
                ["-", "-", "-", "-"],
                ["-", "-", "-", "-"],
                ["-", "-", "-", "-"],
                ["*", "*", "*", "*"],
                ["-", "-", "-", "-"],
            ],
        ),
        (
            [
                ["#", "#", "#", "-"],
                ["*", "-", "#", "#"],
                ["#", "#", "-", "-"],
                ["#", "-", "#", "#"],
                ["#", "-", "-", "-"],
                ["-", "-", "-", "-"],
                ["#", "#", "#", "-"],
            ],
            [
                ["-", "-", "-", "-"],
                ["*", "-", "-", "-"],
                ["-", "-", "-", "-"],
                ["#", "-", "#", "-"],
                ["#", "-", "#", "-"],
                ["#", "#", "#", "#"],
                ["#", "#", "#", "#"],
            ],
        ),
        (
            [
                ["-", "-", "#", "-", "#", "*", "#", "-"],
                ["*", "#", "-", "*", "-", "-", "#", "#"],
                ["-", "*", "*", "#", "#", "#", "#", "-"],
            ],
            [
                ["-", "-", "-", "-", "-", "*", "#", "-"],
                ["*", "-", "-", "*", "#", "-", "#", "-"],
                ["-", "*", "*", "#", "#", "#", "#", "#"],
            ],
        ),
        (
            [
                ["#", "*", "-", "#", "#", "#", "#", "-", "#", "-"],
                ["*", "-", "-", "#", "-", "#", "#", "#", "-", "#"],
                ["#", "#", "#", "-", "-", "-", "#", "*", "-", "-"],
                ["-", "#", "-", "-", "-", "*", "-", "-", "#", "#"],
                ["-", "*", "#", "#", "*", "#", "#", "#", "-", "*"],
                ["#", "*", "#", "#", "*", "#", "*", "-", "-", "#"],
                ["-", "#", "#", "#", "#", "#", "*", "#", "#", "#"],
                ["-", "#", "#", "#", "-", "#", "#", "#", "#", "#"],
                ["#", "#", "-", "-", "#", "#", "#", "#", "-", "-"],
                ["#", "-", "-", "-", "#", "#", "-", "#", "-", "#"],
            ],
            [
                ["-", "*", "-", "-", "-", "-", "-", "-", "-", "-"],
                ["*", "-", "-", "-", "-", "-", "-", "-", "-", "-"],
                ["-", "-", "-", "-", "-", "-", "-", "*", "-", "-"],
                ["-", "-", "-", "-", "-", "*", "-", "-", "-", "-"],
                ["-", "*", "-", "#", "*", "-", "-", "-", "-", "*"],
                ["-", "*", "-", "#", "*", "-", "*", "-", "-", "-"],
                ["-", "-", "-", "#", "-", "-", "*", "-", "-", "#"],
                ["#", "#", "#", "#", "#", "#", "-", "#", "-", "#"],
                ["#", "#", "#", "#", "#", "#", "#", "#", "#", "#"],
                ["#", "#", "#", "#", "#", "#", "#", "#", "#", "#"],
            ],
        ),
    ],
)
def test_solution(board, expected):
    """Gravity simulation should match expected final board."""
    assert solution(board) == expected
